var c = t = 0,
	s = {};
var init = function init(elem, options) {
		this.elems = elem
	}
init.prototype = {
	scroll_left: function(elem, options) {
		t++;
		if (t == true) {
			elem.innerHTML += elem.innerHTML
		}
		this.get(elem, options);
		if (c > 0) {
			c -= 1
		} else {
			c = this.h - 1;
			elem.style.left = -this.d * this.h + 'px'
		}
		this.readyStatus(elem)
	},
	scroll_right: function(elem, options) {
		t++;
		if (t == true) {
			elem.innerHTML += elem.innerHTML
		}
		this.get(elem, options);
		if (c < this.n - 1) {
			c += 1
		} else {
			c = this.h;
			elem.style.left = -this.d * (this.h - 1) + 'px'
		}
		this.readyStatus(elem)
	},
	readyStatus: function(el) {
		this.l = -(this.d * c);
		this.scroll(el, this.l, s)
	},
	scroll: function(elem, L, S) {
		if (S.u !== null && S.u !== undefined) {
			clearInterval(S.u)
		}
		S.u = setInterval(function() {
			var m = elem.offsetLeft;
			r = parseInt(m);
			p = (L - r) / 6;
			p = p < 0 ? Math.floor(p) : Math.ceil(p);
			if (r !== L) {
				var v = r + p;
				elem.style.left = v + 'px'
			} else {
				clearInterval(S.u);
				S.u = null
			}
		}, 36)
	},
	get: function(elem, options) {
		var o = this.obj();
		this.m = o.m;
		this.n = (options.all_img_length).length;
		this.d = (options.all_img_length)[0].offsetWidth;
		this.h = this.n / 2
	},
	obj: function() {
		this.obj_init = {
			S: null,
			m: null
		};
		return this.obj_init
	}
}